title: Sample weight computation applied to DHC 6 TWIN OTTER

# List of folder paths where user added custom registered OpenMDAO components
module_folders:


# Input and output files
input_file: ../results/oad_process_inputs_ghc6.xml
output_file: ../results/oad_process_outputs_ghc6.xml

# Definition of problem driver assuming the OpenMDAO convention "import openmdao.api as om"
driver: om.ScipyOptimizeDriver(tol=1e-2, optimizer='COBYLA')

model:
    aircraft_sizing:
        nonlinear_solver: om.NonlinearBlockGS(maxiter=100, iprint=2, rtol=1e-3, debug_print=True, reraise_child_analysiserror=True,use_aitken=False)
        linear_solver: om.DirectSolver()
        geometry:
            id: fastga.geometry.legacy
            propulsion_id: fastga.wrapper.propulsion.basicTurboprop
            cabin_sizing: 0.0
        aerodynamics_lowspeed:
            id: fastga.aerodynamics.lowspeed.legacy
            propulsion_id: fastga.wrapper.propulsion.basicTurboprop
            wing_airfoil: naca63_415.af
            result_folder_path: D:/tmp
            use_openvsp: true
            compute_slipstream: true
        aerodynamics_highspeed:
            id: fastga.aerodynamics.highspeed.legacy
            propulsion_id: fastga.wrapper.propulsion.basicTurboprop
            wing_airfoil: naca63_415.af
            result_folder_path: D:/tmp
            compute_mach_interpolation: false
            use_openvsp: true
            compute_slipstream: true
        power_train_sizing:
            id: fastga_he.power_train.sizing
            power_train_file_path: ./ghc6_propulsion.yml
        weight:
            id: fastga.weight.legacy
            propulsion_id: fastga.wrapper.propulsion.basicTurboprop
        performances:
            id: fastga_he.performances.mission_vector
            number_of_points_climb: 30
            number_of_points_cruise: 30
            number_of_points_descent: 20
            number_of_points_reserve: 10
            power_train_file_path: ./ghc6_propulsion.yml
            out_file: ../results/ghc6_propulsion.csv
            use_linesearch: True
            pre_condition_pt: False
            use_apply_nonlinear: True
        mtow:
            id: fastga.loop.mtow
        hq:
            tail_sizing:
                id: fastga.handling_qualities.tail_sizing
                propulsion_id: fastga.wrapper.propulsion.basicTurboprop
            static_margin:
                id: fastga.handling_qualities.static_margin
        wing_position:
            id: fastga.loop.wing_position
        wing_area:
            id: fastga.loop.wing_area

submodels:
    submodel.weight.mass.payload: null
    submodel.weight.mass.propulsion.fuel_system: fastga.submodel.weight.mass.propulsion.fuel_system.flops
    submodel.weight.mass.airframe.paint: fastga.submodel.weight.mass.airframe.paint.by_wet_area
#    submodel.weight.mass.airframe.tail: fastga.submodel.weight.mass.airframe.tail.torenbeek_gd
    submodel.weight.mass.airframe.wing: fastga_he.submodel.weight.mass.airframe.wing.analytical_he
    submodel.weight.mass.airframe.fuselage: fastga.submodel.weight.mass.airframe.fuselage.analytical
    submodel.weight.mass.airframe.flight_controls: fastga.submodel.weight.mass.airframe.flight_controls.flops
    submodel.weight.mass.furniture.seats: null
    submodel.weight.mass.system.life_support_system: fastga.submodel.weight.mass.system.life_support_system.flops
    submodel.weight.mass.system.recording_system: null
    submodel.loop.wing_area.update.geom: fastga_he.submodel.loop.wing_area.update.geom.advanced
    submodel.loop.wing_area.constraint.geom: fastga_he.submodel.loop.wing_area.constraint.geom.advanced
    submodel.geometry.wing.thickness_ratio: null
    submodel.aerodynamics.high_lift.delta: null
    submodel.geometry.mfw: fastga.submodel.geometry.mfw.advanced
    submodel.geometry.vertical_tail.position.fd: null
    submodel.performances.mission_vector.descent_speed: null
    submodel.performances.mission_vector.climb_speed: null
    submodel.performances_he.energy_consumption: fastga_he.submodel.performances.energy_consumption.from_pt_file
    submodel.performances_he.dep_effect: fastga_he.submodel.performances.dep_effect.from_pt_file
    submodel.propulsion.constraints.pmsm.rpm: fastga_he.submodel.propulsion.constraints.pmsm.rpm.ensure
    submodel.propulsion.constraints.pemfc_stack.effective_area: fastga_he.submodel.propulsion.constraints.pemfc_stack.effective_area.enforce
    submodel.propulsion.constraints.hydrogen_gas_tank.capacity: fastga_he.submodel.propulsion.constraints.hydrogen_gas_tank.capacity.enforce
    submodel.propulsion.performances.dc_line.temperature_profile: fastga_he.submodel.propulsion.performances.dc_line.temperature_profile.with_dynamics
    submodel.propulsion.constraints.inverter.current: fastga_he.submodel.propulsion.constraints.inverter.current.ensure
    submodel.propulsion.constraints.pmsm.torque: fastga_he.submodel.propulsion.constraints.pmsm.torque.ensure
    submodel.propulsion.performances.pemfc.layer_voltage: fastga_he.submodel.propulsion.performances.pemfc.layer_voltage.statistical #statistical, analytical
    submodel.weight.mass.mzfw_and_mlw: fastga_he.submodel.weight.mass.mzfw_and_mlw.legacy #only_zfw or legacy
    submodel.propulsion.sizing.pemfc.weight: fastga_he.submodel.propulsion.sizing.pemfc.weight.adjusted
    submodel.propulsion.performances.pemfc.max_power_density: fastga_he.submodel.propulsion.performances.pemfc.max_power_density.aerostak #aerostak, intelligent_energy
    submodel.weight.mass.propulsion: fastga_he.submodel.weight.mass.propulsion.power_train
    submodel.weight.cg.propulsion: fastga_he.submodel.weight.cg.propulsion.power_train
    submodel.weight.cg.aircraft_empty.x: fastga_he.submodel.weight.cg.aircraft_empty.x.with_propulsion_as_one
    submodel.weight.mass.systems: fastga_he.submodel.weight.mass.systems.weight_nan
    submodel.weight.mass.system.power_system: null
    submodel.geometry.nacelle.dimension: null
    submodel.aerodynamics.nacelle.cd0: fastga_he.submodel.aerodynamics.powertrain.cd0.from_pt_file
    submodel.weight.cg.loadcase.flight: fastga_he.submodel.weight.cg.loadcase.flight.simple
    submodel.weight.mass_breakdown: fastga_he.submodel.weight.mass_breakdown.modular
    submodel.propulsion.constraints.inductor.air_gap: fastga_he.submodel.propulsion.constraints.inductor.air_gap.enforce
    submodel.propulsion.dc_dc_converter.weight: fastga_he.submodel.propulsion.dc_dc_converter.weight.power_to_mass



